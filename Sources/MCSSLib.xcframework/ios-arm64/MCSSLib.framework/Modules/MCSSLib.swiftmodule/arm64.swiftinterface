// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios14.3 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name MCSSLib
import CryptoKit
import Foundation
@_exported import MCSSLib
import Swift
import UIKit
public enum MCSSTheme : Swift.String {
  case snow
  case love
  case lemonmilk
  case pet
  case moon
  case scarlet
  case acid
  case deepblue
  case turquoise
  case rainbow
  case sober
  case dark
  case minimal
  case retroterminal
  case none
  public typealias RawValue = Swift.String
  public init?(rawValue: Swift.String)
  public var rawValue: Swift.String {
    get
  }
}
@IBDesignable extension UIView {
  public struct MCSS {
    public var classes: Swift.String
    public var id: Swift.String
    public var fixed: Swift.Bool
  }
  public var mcss: UIKit.UIView.MCSS {
    get
    set(newValue)
  }
}
@_hasMissingDesignatedInitializers public class MCSS {
  public static var shared: MCSSLib.MCSS
  public func initialize(withKey key: Swift.String)
  public func useTheme(named name: Swift.String)
  public func useTheme(_ name: MCSSLib.MCSSTheme)
  public func addStylesheet(fromFile file: Swift.String)
  public func addStylesheet(fromUrl url: Swift.String)
  public func apply(in viewController: UIKit.UIViewController)
  public func apply(in view: UIKit.UIView)
  public func apply(in cell: UIKit.UITableViewCell, forTable table: UIKit.UITableView, index: Foundation.IndexPath)
  public func apply(in cell: UIKit.UICollectionViewCell, forCollection collection: UIKit.UICollectionView, index: Foundation.IndexPath)
  @objc deinit
}
